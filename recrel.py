# This file was *autogenerated* from the file recrel.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
from itertools import product

load('bhs.sage')

def recrel_a(q, l1, l2, m1, m2, l):
    total_sum = _sage_const_0 
    for i1, i2, j1, j2, n1, n2 in product(range(_sage_const_2 *l1+_sage_const_1 ), range(_sage_const_2 *l2+_sage_const_1 ),\
        range(_sage_const_2 ), range(_sage_const_2 ), range(_sage_const_2 *m1+_sage_const_1 ), range(_sage_const_2 *m2+_sage_const_1 )):
        cg1 = ClebschGordanCoefficients(q, l1, l2, l, i1-l1, i2-l2, l)
        cg2 = ClebschGordanCoefficients(q, _sage_const_1 /_sage_const_2 , _sage_const_1 /_sage_const_2 , _sage_const_0 , j1-_sage_const_1 /_sage_const_2 , j2-_sage_const_1 /_sage_const_2 , _sage_const_0 )
        cg3 = ClebschGordanCoefficients(q, l1, _sage_const_1 /_sage_const_2 , m1, i1-l1, j1-_sage_const_1 /_sage_const_2 , n1-m1)
        cg4 = ClebschGordanCoefficients(q, l2, _sage_const_1 /_sage_const_2 , m2, i2-l2, j2-_sage_const_1 /_sage_const_2 , n2-m2)
        cg5 = ClebschGordanCoefficients(q, m1, m2, l, n1-m1, n2-m2, l)

        cg_list = [cg1, cg2, cg3, cg4, cg5]
        map(lambda elm : elm.transform2one(), cg_list)
        total_sum += prod(map(lambda elm : elm.evaluate(), cg_list))
    
    return total_sum

q = var('q')
print recrel_a(q, _sage_const_1 /_sage_const_2 , _sage_const_1 /_sage_const_2 , _sage_const_0 , _sage_const_0 , _sage_const_0 ).simplify()
print recrel_a(q, _sage_const_1 /_sage_const_2 , _sage_const_1 /_sage_const_2 , _sage_const_1 , _sage_const_1 , _sage_const_0 ).simplify()
